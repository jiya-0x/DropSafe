{
  "address": "0x8CE50e8BEDB56f991E19e2947389a1FF7482b533",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NoFund",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "Fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funderAddrArray",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x5940ce8c4464982419780d2d54b7ad9bfef74e1f3ff88af3e27e0fc920419004",
  "receipt": {
    "to": null,
    "from": "0xAD1150539c5F09F950ed77aFf0506298582CA94A",
    "contractAddress": "0x8CE50e8BEDB56f991E19e2947389a1FF7482b533",
    "transactionIndex": 109,
    "gasUsed": "794202",
    "logsBloom": "0x
    "blockHash": "0x891fe0c29be0d0e71679254bb2ca9fd851a85cfe51c2d915a8ca50656285e72f",
    "transactionHash": "0x5940ce8c4464982419780d2d54b7ad9bfef74e1f3ff88af3e27e0fc920419004",
    "logs": [],
    "blockNumber": 8068915,
    "cumulativeGasUsed": "20785738",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "4fc83b7808e9e46a373683331db46353",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NoFund\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funderAddrArray\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(\\n        uint80 _roundId\\n    )\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x6b58cb86d2c165a9e4f2f19a071fdfd81100565d6c22cb466c2aa6b97d07caa6\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceCalculator.sol\\\";\\n\\ncontract FundMe {\\n    //ETHUSD price address for sepolia testnet 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    using PriceCalculator for uint256;\\n\\n    uint256 public constant minUSD = 1 * 1e18;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    address[] public funder;\\n    mapping(address => uint256) public funderAddrArray;\\n\\n    address public immutable i_owner;\\n\\n    error notOwner();\\n    error NoFund();\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function Fund() public payable {\\n        if (msg.value.PriceCal(priceFeed) >= minUSD) revert NoFund();\\n        //require(msg.value.PriceCal() >= minUSD, \\\"No funds\\\");\\n\\n        funder.push(msg.sender);\\n        funderAddrArray[msg.sender] += msg.value;\\n    }\\n\\n    function Withdraw() public onlyOwnwer {\\n        for (uint256 i = 0; i < funder.length; i++) {\\n            address funders = funder[i];\\n            // to reset array value number or length\\n            funderAddrArray[funders] = 0;\\n        }\\n        //to reset the array\\n        funder = new address[](0);\\n\\n        (bool success, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n\\n        require(success, \\\"Transfer failed\\\");\\n    }\\n\\n    modifier onlyOwnwer() {\\n        if (msg.sender != i_owner) revert notOwner();\\n        //require(msg.sender == owner, \\\"Sender is not Owner\\\");\\n        _;\\n    }\\n\\n    receive() external payable {\\n        Fund();\\n    }\\n\\n    fallback() external payable {\\n        Fund();\\n    }\\n}\\n\",\"keccak256\":\"0x511bc1b3afc3dd2e4aa03466b1e60130a4f6fff0acddc68e54006cef107d76a4\",\"license\":\"MIT\"},\"contracts/PriceCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceCalculator {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (uint256 price, , , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    function PriceCal(\\n        uint ETH_Amount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = ETH_Amount * 1e18;\\n\\n        return (getPrice(priceFeed) * ethPrice) / 1e18;\\n    }\\n}\\n\",\"keccak256\":\"0xbe062221df52318c7ba5a08f57d157d0beea74498aebd644399c9a95b554bfe9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e5b380380610e5b83398181016040528101906100329190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b60805160601c610cf76101646000396000818161031801526105950152610cf76000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100eb5780639569fc5214610116578063dba6335f14610153578063dc992aa01461017e57610083565b80631f2c92381461008d57806357ea89b6146100ca5780636ce1417e146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061078a565b6102d7565b6040516100c191906107f8565b60405180910390f35b3480156100d657600080fd5b506100df610316565b005b6100e96101a9565b005b3480156100f757600080fd5b50610100610557565b60405161010d9190610872565b60405180910390f35b34801561012257600080fd5b5061013d600480360381019061013891906108b9565b61057b565b60405161014a91906108f5565b60405180910390f35b34801561015f57600080fd5b50610168610593565b60405161017591906107f8565b60405180910390f35b34801561018a57600080fd5b506101936105b7565b6040516101a091906108f5565b60405180910390f35b670de0b6b3a76400006101e560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c390919063ffffffff16565b1061021c576040517f9b3a0eeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ce919061093f565b92505081905550565b600181815481106102e757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039b576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610447576000600182815481106103c1576103c0610995565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043f906109c4565b91505061039e565b50600067ffffffffffffffff81111561046357610462610a0d565b5b6040519080825280602002602001820160405280156104915781602001602082028036833780820191505090505b50600190805190602001906104a79291906106a8565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ce90610a6d565b60006040518083038185875af1925050503d806000811461050b576040519150601f19603f3d011682016040523d82523d6000602084013e610510565b606091505b5050905080610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90610adf565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b670de0b6b3a764000081565b600080670de0b6b3a7640000846105da9190610aff565b9050670de0b6b3a7640000816105ef8561060c565b6105f99190610aff565b6106039190610b88565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610c46565b5050505069ffffffffffffffffffff16905080915050919050565b828054828255906000526020600020908101928215610721579160200282015b828111156107205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c8565b5b50905061072e9190610732565b5090565b5b8082111561074b576000816000905550600101610733565b5090565b600080fd5b6000819050919050565b61076781610754565b811461077257600080fd5b50565b6000813590506107848161075e565b92915050565b6000602082840312156107a05761079f61074f565b5b60006107ae84828501610775565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107e2826107b7565b9050919050565b6107f2816107d7565b82525050565b600060208201905061080d60008301846107e9565b92915050565b6000819050919050565b600061083861083361082e846107b7565b610813565b6107b7565b9050919050565b600061084a8261081d565b9050919050565b600061085c8261083f565b9050919050565b61086c81610851565b82525050565b60006020820190506108876000830184610863565b92915050565b610896816107d7565b81146108a157600080fd5b50565b6000813590506108b38161088d565b92915050565b6000602082840312156108cf576108ce61074f565b5b60006108dd848285016108a4565b91505092915050565b6108ef81610754565b82525050565b600060208201905061090a60008301846108e6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094a82610754565b915061095583610754565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098a57610989610910565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109cf82610754565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0257610a01610910565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a57600083610a3c565b9150610a6282610a47565b600082019050919050565b6000610a7882610a4a565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610ac9600f83610a82565b9150610ad482610a93565b602082019050919050565b60006020820190508181036000830152610af881610abc565b9050919050565b6000610b0a82610754565b9150610b1583610754565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4e57610b4d610910565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9382610754565b9150610b9e83610754565b925082610bae57610bad610b59565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd881610bb9565b8114610be357600080fd5b50565b600081519050610bf581610bcf565b92915050565b6000819050919050565b610c0e81610bfb565b8114610c1957600080fd5b50565b600081519050610c2b81610c05565b92915050565b600081519050610c408161075e565b92915050565b600080600080600060a08688031215610c6257610c6161074f565b5b6000610c7088828901610be6565b9550506020610c8188828901610c1c565b9450506040610c9288828901610c31565b9350506060610ca388828901610c31565b9250506080610cb488828901610be6565b915050929550929590935056fea2646970667358221220090e00225ef7af26f4c7576a1f4f7b8d48839c407b9d7ba008522ff911c3a1a864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a146100eb5780639569fc5214610116578063dba6335f14610153578063dc992aa01461017e57610083565b80631f2c92381461008d57806357ea89b6146100ca5780636ce1417e146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061078a565b6102d7565b6040516100c191906107f8565b60405180910390f35b3480156100d657600080fd5b506100df610316565b005b6100e96101a9565b005b3480156100f757600080fd5b50610100610557565b60405161010d9190610872565b60405180910390f35b34801561012257600080fd5b5061013d600480360381019061013891906108b9565b61057b565b60405161014a91906108f5565b60405180910390f35b34801561015f57600080fd5b50610168610593565b60405161017591906107f8565b60405180910390f35b34801561018a57600080fd5b506101936105b7565b6040516101a091906108f5565b60405180910390f35b670de0b6b3a76400006101e560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c390919063ffffffff16565b1061021c576040517f9b3a0eeb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102ce919061093f565b92505081905550565b600181815481106102e757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039b576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610447576000600182815481106103c1576103c0610995565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043f906109c4565b91505061039e565b50600067ffffffffffffffff81111561046357610462610a0d565b5b6040519080825280602002602001820160405280156104915781602001602082028036833780820191505090505b50600190805190602001906104a79291906106a8565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ce90610a6d565b60006040518083038185875af1925050503d806000811461050b576040519150601f19603f3d011682016040523d82523d6000602084013e610510565b606091505b5050905080610554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054b90610adf565b60405180910390fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b670de0b6b3a764000081565b600080670de0b6b3a7640000846105da9190610aff565b9050670de0b6b3a7640000816105ef8561060c565b6105f99190610aff565b6106039190610b88565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610c46565b5050505069ffffffffffffffffffff16905080915050919050565b828054828255906000526020600020908101928215610721579160200282015b828111156107205782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106c8565b5b50905061072e9190610732565b5090565b5b8082111561074b576000816000905550600101610733565b5090565b600080fd5b6000819050919050565b61076781610754565b811461077257600080fd5b50565b6000813590506107848161075e565b92915050565b6000602082840312156107a05761079f61074f565b5b60006107ae84828501610775565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107e2826107b7565b9050919050565b6107f2816107d7565b82525050565b600060208201905061080d60008301846107e9565b92915050565b6000819050919050565b600061083861083361082e846107b7565b610813565b6107b7565b9050919050565b600061084a8261081d565b9050919050565b600061085c8261083f565b9050919050565b61086c81610851565b82525050565b60006020820190506108876000830184610863565b92915050565b610896816107d7565b81146108a157600080fd5b50565b6000813590506108b38161088d565b92915050565b6000602082840312156108cf576108ce61074f565b5b60006108dd848285016108a4565b91505092915050565b6108ef81610754565b82525050565b600060208201905061090a60008301846108e6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061094a82610754565b915061095583610754565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561098a57610989610910565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006109cf82610754565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0257610a01610910565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a57600083610a3c565b9150610a6282610a47565b600082019050919050565b6000610a7882610a4a565b9150819050919050565b600082825260208201905092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610ac9600f83610a82565b9150610ad482610a93565b602082019050919050565b60006020820190508181036000830152610af881610abc565b9050919050565b6000610b0a82610754565b9150610b1583610754565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b4e57610b4d610910565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9382610754565b9150610b9e83610754565b925082610bae57610bad610b59565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bd881610bb9565b8114610be357600080fd5b50565b600081519050610bf581610bcf565b92915050565b6000819050919050565b610c0e81610bfb565b8114610c1957600080fd5b50565b600081519050610c2b81610c05565b92915050565b600081519050610c408161075e565b92915050565b600080600080600060a08688031215610c6257610c6161074f565b5b6000610c7088828901610be6565b9550506020610c8188828901610c1c565b9450506040610c9288828901610c31565b9350506060610ca388828901610c31565b9250506080610cb488828901610be6565b915050929550929590935056fea2646970667358221220090e00225ef7af26f4c7576a1f4f7b8d48839c407b9d7ba008522ff911c3a1a864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funder",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funderAddrArray",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}