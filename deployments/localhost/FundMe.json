{
  "address": "0xfC39AF4342A64528CeC93c7fEFA1dfa7100Fb2fB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "noFund",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "notOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funderAddrArray",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1a0024ddb3f30b3c9da831772658f4b6eec50753a410d99875b1d10b83568b07",
  "receipt": {
    "to": null,
    "from": "0x30aBe79528141252703EA7f861C5FFC7799457A9",
    "contractAddress": "0xfC39AF4342A64528CeC93c7fEFA1dfa7100Fb2fB",
    "transactionIndex": 0,
    "gasUsed": "732182",
    "logsBloom": "0x
    "blockHash": "0x5ab442caa1f78af25c66de585b0a577366b1afc291f997829c074452ed6445e1",
    "transactionHash": "0x1a0024ddb3f30b3c9da831772658f4b6eec50753a410d99875b1d10b83568b07",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "732182",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x72f30c73204D0835dB16f7cFE91e5b02fF5d10d1"
  ],
  "numDeployments": 1,
  "solcInputHash": "46af08d5082bca28fc76d6fe6f49dace",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"noFund\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"notOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funderAddrArray\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(\\n        uint80 _roundId\\n    )\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\",\"keccak256\":\"0x6b58cb86d2c165a9e4f2f19a071fdfd81100565d6c22cb466c2aa6b97d07caa6\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./PriceCalculator.sol\\\";\\n\\ncontract FundMe {\\n    using PriceCalculator for uint256;\\n\\n    uint256 public constant minUSD = 1000000000000000000; // 1 USD minimum in Wei\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    address[] public funder;\\n    mapping(address => uint256) public funderAddrArray;\\n\\n    address public immutable i_owner;\\n\\n    error notOwner();\\n    error noFund();\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // Function to fund the contract\\n    function fund() public payable {\\n        uint256 usdAmount = msg.value.PriceCal(priceFeed);\\n        if (usdAmount < minUSD) revert noFund(); // Only allow funding of at least 1 USD worth of ETH\\n\\n        funder.push(msg.sender); // Add the sender to funder list\\n        funderAddrArray[msg.sender] += msg.value; // Record the funding amount for the sender\\n    }\\n\\n    // Withdraw function only for the owner\\n    function withdraw() public onlyOwner {\\n        for (uint256 i = 0; i < funder.length; i++) {\\n            address funders = funder[i];\\n            funderAddrArray[funders] = 0; // Reset funder's balance\\n        }\\n        funder = new address[](0); // Reset funder list\\n\\n        // Transfer balance to the owner\\n        payable(msg.sender).transfer(address(this).balance);\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert notOwner(); // Ensure only the contract owner can withdraw\\n        _;\\n    }\\n\\n    // Receive function to fund contract\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    // Fallback function to fund contract when no specific data is provided\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x5a35c7a619a954eff20f5e0a0f6ef0474a756bb93e34a66b2868c066b84eb792\",\"license\":\"MIT\"},\"contracts/PriceCalculator.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"./AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceCalculator {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // );\\n        (uint256 price, , , , ) = priceFeed.latestRoundData();\\n        return price;\\n    }\\n\\n    function PriceCal(\\n        uint ETH_Amount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = ETH_Amount * 1e18;\\n\\n        return (getPrice(priceFeed) * ethPrice) / 1e18;\\n    }\\n}\\n\",\"keccak256\":\"0xbe062221df52318c7ba5a08f57d157d0beea74498aebd644399c9a95b554bfe9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610d39380380610d3983398181016040528101906100329190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b60805160601c610bd56101646000396000818161031f01526105360152610bd56000f3fe6080604052600436106100745760003560e01c80639569fc521161004e5780639569fc521461010c578063b60d428814610149578063dba6335f14610153578063dc992aa01461017e57610083565b80631f2c92381461008d5780633ccfd60b146100ca578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061072b565b6102de565b6040516100c19190610799565b60405180910390f35b3480156100d657600080fd5b506100df61031d565b005b3480156100ed57600080fd5b506100f66104f8565b6040516101039190610813565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e919061085a565b61051c565b6040516101409190610896565b60405180910390f35b6101516101a9565b005b34801561015f57600080fd5b50610168610534565b6040516101759190610799565b60405180910390f35b34801561018a57600080fd5b50610193610558565b6040516101a09190610896565b60405180910390f35b60006101de60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056490919063ffffffff16565b9050670de0b6b3a7640000811015610222576040517f931c055300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906108e0565b9250508190555050565b600181815481106102ee57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a2576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044e576000600182815481106103c8576103c7610936565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044690610965565b9150506103a5565b50600067ffffffffffffffff81111561046a576104696109ae565b5b6040519080825280602002602001820160405280156104985781602001602082028036833780820191505090505b50600190805190602001906104ae929190610649565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104f5573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b670de0b6b3a764000081565b600080670de0b6b3a76400008461057b91906109dd565b9050670de0b6b3a764000081610590856105ad565b61059a91906109dd565b6105a49190610a66565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f657600080fd5b505afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610b24565b5050505069ffffffffffffffffffff16905080915050919050565b8280548282559060005260206000209081019282156106c2579160200282015b828111156106c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610669565b5b5090506106cf91906106d3565b5090565b5b808211156106ec5760008160009055506001016106d4565b5090565b600080fd5b6000819050919050565b610708816106f5565b811461071357600080fd5b50565b600081359050610725816106ff565b92915050565b600060208284031215610741576107406106f0565b5b600061074f84828501610716565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078382610758565b9050919050565b61079381610778565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6000819050919050565b60006107d96107d46107cf84610758565b6107b4565b610758565b9050919050565b60006107eb826107be565b9050919050565b60006107fd826107e0565b9050919050565b61080d816107f2565b82525050565b60006020820190506108286000830184610804565b92915050565b61083781610778565b811461084257600080fd5b50565b6000813590506108548161082e565b92915050565b6000602082840312156108705761086f6106f0565b5b600061087e84828501610845565b91505092915050565b610890816106f5565b82525050565b60006020820190506108ab6000830184610887565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108eb826106f5565b91506108f6836106f5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561092b5761092a6108b1565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610970826106f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109a3576109a26108b1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006109e8826106f5565b91506109f3836106f5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a2c57610a2b6108b1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a71826106f5565b9150610a7c836106f5565b925082610a8c57610a8b610a37565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ab681610a97565b8114610ac157600080fd5b50565b600081519050610ad381610aad565b92915050565b6000819050919050565b610aec81610ad9565b8114610af757600080fd5b50565b600081519050610b0981610ae3565b92915050565b600081519050610b1e816106ff565b92915050565b600080600080600060a08688031215610b4057610b3f6106f0565b5b6000610b4e88828901610ac4565b9550506020610b5f88828901610afa565b9450506040610b7088828901610b0f565b9350506060610b8188828901610b0f565b9250506080610b9288828901610ac4565b915050929550929590935056fea26469706673582212207916a94bcfa51b74b64c729713314937b68b9805bc173032c1ae499e93f8519064736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639569fc521161004e5780639569fc521461010c578063b60d428814610149578063dba6335f14610153578063dc992aa01461017e57610083565b80631f2c92381461008d5780633ccfd60b146100ca578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061072b565b6102de565b6040516100c19190610799565b60405180910390f35b3480156100d657600080fd5b506100df61031d565b005b3480156100ed57600080fd5b506100f66104f8565b6040516101039190610813565b60405180910390f35b34801561011857600080fd5b50610133600480360381019061012e919061085a565b61051c565b6040516101409190610896565b60405180910390f35b6101516101a9565b005b34801561015f57600080fd5b50610168610534565b6040516101759190610799565b60405180910390f35b34801561018a57600080fd5b50610193610558565b6040516101a09190610896565b60405180910390f35b60006101de60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461056490919063ffffffff16565b9050670de0b6b3a7640000811015610222576040517f931c055300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d491906108e0565b9250508190555050565b600181815481106102ee57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a2576040517f251c9d6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044e576000600182815481106103c8576103c7610936565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044690610965565b9150506103a5565b50600067ffffffffffffffff81111561046a576104696109ae565b5b6040519080825280602002602001820160405280156104985781602001602082028036833780820191505090505b50600190805190602001906104ae929190610649565b503373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104f5573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b670de0b6b3a764000081565b600080670de0b6b3a76400008461057b91906109dd565b9050670de0b6b3a764000081610590856105ad565b61059a91906109dd565b6105a49190610a66565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156105f657600080fd5b505afa15801561060a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062e9190610b24565b5050505069ffffffffffffffffffff16905080915050919050565b8280548282559060005260206000209081019282156106c2579160200282015b828111156106c15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610669565b5b5090506106cf91906106d3565b5090565b5b808211156106ec5760008160009055506001016106d4565b5090565b600080fd5b6000819050919050565b610708816106f5565b811461071357600080fd5b50565b600081359050610725816106ff565b92915050565b600060208284031215610741576107406106f0565b5b600061074f84828501610716565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078382610758565b9050919050565b61079381610778565b82525050565b60006020820190506107ae600083018461078a565b92915050565b6000819050919050565b60006107d96107d46107cf84610758565b6107b4565b610758565b9050919050565b60006107eb826107be565b9050919050565b60006107fd826107e0565b9050919050565b61080d816107f2565b82525050565b60006020820190506108286000830184610804565b92915050565b61083781610778565b811461084257600080fd5b50565b6000813590506108548161082e565b92915050565b6000602082840312156108705761086f6106f0565b5b600061087e84828501610845565b91505092915050565b610890816106f5565b82525050565b60006020820190506108ab6000830184610887565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108eb826106f5565b91506108f6836106f5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561092b5761092a6108b1565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610970826106f5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109a3576109a26108b1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006109e8826106f5565b91506109f3836106f5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a2c57610a2b6108b1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a71826106f5565b9150610a7c836106f5565b925082610a8c57610a8b610a37565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ab681610a97565b8114610ac157600080fd5b50565b600081519050610ad381610aad565b92915050565b6000819050919050565b610aec81610ad9565b8114610af757600080fd5b50565b600081519050610b0981610ae3565b92915050565b600081519050610b1e816106ff565b92915050565b600080600080600060a08688031215610b4057610b3f6106f0565b5b6000610b4e88828901610ac4565b9550506020610b5f88828901610afa565b9450506040610b7088828901610b0f565b9350506060610b8188828901610b0f565b9250506080610b9288828901610ac4565b915050929550929590935056fea26469706673582212207916a94bcfa51b74b64c729713314937b68b9805bc173032c1ae499e93f8519064736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 368,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)356"
      },
      {
        "astId": 371,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funder",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 375,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funderAddrArray",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)356": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}